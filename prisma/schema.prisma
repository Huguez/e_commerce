// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

enum Size {
	XS
	S
	M
	L
	XL
	XXL
	XXXL
}

enum Gender {
	men
	women
	kid
	unisex
}

enum Role {
	customer
	admin
}

enum Status {
	active
	unverified
	banned
}

model Category {
	id String @id @default( uuid() )
	name String @unique

	Product Product[]
}

model Product {
	id          String   @id @default( uuid() )
	title       String
	description String
	inStock     Int
	price       Float    @default( 0.0 )
	sizes       Size[]
	slug        String   @unique
	tags        String[] @default( [] )
	gender      Gender

	// Relationships
	categoryId  String
	category    Category @relation( fields: [ categoryId ], references: [ id ] )

	images      ProductImage[]

	@@index([ gender ])
}

model ProductImage {
	id        Int  @id @default( autoincrement() )
	url       String

	productId String
	product   Product @relation( fields: [ productId ], references: [ id ] )
}

model User {
	id   String @id @default( uuid() )
	name String
	email String @unique
	emailVerifed DateTime?
	password String
	role Role @default( customer )
	imageProfile String?
	status Status @default( unverified )

	address UserAddress?
}

model Country {
	id   String @id @default( uuid() )
	name String
	code String
	UserAddress UserAddress[]
}

model UserAddress {
	id       String @id @default( uuid() )
	name     String
	lastname String
	address  String
	addressOptional String?
	codeZip  String 
	city     String 
	phone    String

	// relationship
	country Country @relation( fields: [ countryId ], references: [id] )
	countryId String

	userId String @unique
	user User @relation( fields: [ userId ], references: [id] )
}